{
    "$schema": "http://json.schemastore.org/template",
    "author": "Efren Gonzalez",
    "classifications": [
        "OpenFaas Functions"
    ],
    "name": "OpenFaas C# net 5.0 Function",
    "shortName": "ofaas-function-http",
    "identity": "OniCloud.OpenFaas.CSharp.DotNet.5.0",
    "groupIdentity": "OniCloud.OpenFaas.Functions",
    "tags": {
        "language": "C#",
        "type": "project"
    },
    "sourceName": "OniCloud.Serverless.Function",
    "preferNameDirectory": true,
    "symbols": {
        "func-name": {
            "type": "parameter",
            "datatype": "text",
            "description": "Function Name",
            "isRequired": true,
            "fileRename": "func-handler-project"
        },
        "funcNameLower": {
            "type": "generated",
            "generator": "casing",
            "parameters": {
                "source": "func-name",
                "toLower": true
            }
        },
        "funcNameRegex": {
            "type": "generated",
            "generator": "regex",
            "dataType": "string",
            "replaces": "function-name",
            "fileRename": "stack-file",
            "parameters": {
                "source": "funcNameLower",
                "steps": [
                    {
                        "regex": "_",
                        "replacement": "-"
                    }
                ]
            }
        },
        "funcHandler": {
            "type": "generated",
            "generator": "regex",
            "dataType": "string",
            "parameters": {
                "source": "funcNameLower",
                "steps": [
                    {
                        "regex": "_",
                        "replacement": "-"
                    }
                ]
            },
            "replaces": "func-handler",
            "fileRename": "OpenFaasHandler"
        },
        "func-method": {
            "type": "parameter",
            "datatype": "text",
            "description": "Function HTTP method",
            "isRequired": false,
            "defaultValue": "post",
            "replaces": "function-method"
        },
        "func-route": {
            "type": "parameter",
            "datatype": "text",
            "description": "Function HTTP Route",
            "isRequired": false,
            "defaultValue": "/",
            "replaces": "function-route"
        },
        "func-auth": {
            "type": "parameter",
            "datatype": "choice",
            "isRequired": false,
            "defaultValue": "none",
            "description": "Function authorization type",
            "choices": [
                {
                    "choice": "none",
                    "description": "No Authorization"
                },
                {
                    "choice": "jwt",
                    "description": "Uses JWT Token to authenticate the caller"
                }
            ]
        },
        "func-auth-type": {
            "type": "generated",
            "generator": "switch",
            "replaces": "function-auth",
            "parameters": {
                "datatype": "text",
                "evaluator": "C++",
                "cases": [
                    {
                        "condition": "(func-auth == 'none')",
                        "value": "AuthorizationType.None"
                    },
                    {
                        "condition": "(func-auth == 'jwt')",
                        "value": "AuthorizationType.JWT"
                    }
                ]
            }
        },
        "assembly": {
            "type": "generated",
            "generator": "casing",
            "parameters": {
                "source": "funcNameRegex",
                "toLower": true
            },
            "replaces": "function-assembly-name"
        },
        "image": {
            "type": "parameter",
            "datatype": "text",
            "description": "Function's Docker Image Name with format `<image-tag>:<version|latest>. If name is not provided the name of the function will be used. If version is not provided \"latest\" will be used.",
            "isRequired": false
        },
        "defaultImageName": {
            "type": "generated",
            "generator": "join",
            "parameters": {
                "symbols": [
                    {
                        "type": "ref",
                        "value": "funcNameRegex"
                    },
                    {
                        "type": "const",
                        "value": ":latest"
                    }
                ]
            }
        },
        "imageName": {
            "type": "generated",
            "generator": "coalesce",
            "parameters": {
                "sourceVariableName": "image",
                "fallbackVariableName": "defaultImageName"
            },
            "replaces": "function-image"
        },
        "signature-alg": {
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "none",
            "description": "If authorization type is set to sig here is were we specify the signature algorithm.",
            "isRequired": false,
            "choices": [
                {
                    "choice": "none",
                    "description": "Don't validate request signature."
                },
                {
                    "choice": "hmac-sha1",
                    "description": "Validate signature using hmac-sha1 algorithm."
                },
                {
                    "choice": "hmac-sha256",
                    "description": "Validate signature using hmac-sha256 algorithm."
                },
                // {
                //     "choice": "hmac-sha256-v4",
                //     "description": "Validate signature using hmac-sha256 V4 Amazon algorithm. NOTE NOT IMPLEMENTED"
                // },
                {
                    "choice": "ed25519",
                    "description": "Validate signature using EdDSA Curve25519 algorithm."
                }
            ]
        },
        "signature-key": {
            "type": "parameter",
            "datatype": "text",
            "description": "The name of the secet that contains the key to validate the signature",
            "defaultValue": "function-signature-key",
            "isRequired": false,
            "replaces": "sig-key"
        },
        "signature-header-name": {
            "type": "parameter",
            "datatype": "text",
            "description": "The name of the HTTP request header that contains the signature digest to validate",
            "defaultValue": "function-signature-header-name",
            "isRequired": false,
            "replaces": "sig-header-name"
        },
        "hasSignature": {
            "type": "computed",
            "datatype": "bool",
            "value": "signature-alg != \"none\""
        },
        "sig-alg-type": {
            "type": "generated",
            "generator": "switch",
            "replaces": "sig-alg",
            "parameters": {
                "datatype": "text",
                "evaluator": "C++",
                "cases": [
                    {
                        "condition": "(signature-alg == 'hmac-sha1')",
                        "value": "SignerAlgorithm.HmacSha1"
                    },
                    {
                        "condition": "(signature-alg == 'hmac-sha256')",
                        "value": "SignerAlgorithm.HmacSha256"
                    },
                    {
                        "condition": "(signature-alg == 'hmac-ed25519')",
                        "value": "SignerAlgorithm.Ed25519"
                    }
                ]
            }
        },
        "limits-cpu": {
            "type": "parameter",
            "datatype": "text",
            "description": "Applying CPu limits to the function allows you to prevent them to consuming too many resources. Requests ensures the stated host resource is available for the container to use",
            "defaultValue": "100m",
            "isRequired": false,
            "replaces": "limits-cpu-yaml"
        },
        "limits-memory": {
            "type": "parameter",
            "datatype": "text",
            "description": "Applying memory limits to the function allows you to prevent them to consuming too many resources. Requests ensures the stated host resource is available for the container to use",
            "defaultValue": "40Mi",
            "isRequired": false,
            "replaces": "limits-memory-yaml"
        },
        "requests-cpu": {
            "type": "parameter",
            "datatype": "text",
            "description": "Applying CPu limits to the function allows you to prevent them to consuming too many resources. Requests ensures the stated host resource is available for the container to use",
            "defaultValue": "100m",
            "isRequired": false,
            "replaces": "requests-cpu-yaml"
        },
        "requests-memory": {
            "type": "parameter",
            "datatype": "text",
            "description": "Applying Memory limits to the function allows you to prevent them to consuming too many resources. Requests ensures the stated host resource is available for the container to use",
            "defaultValue": "20Mi",
            "isRequired": false,
            "replaces": "requests-memory-yaml"
        },
        "api": {
            "type": "parameter",
            "datatype": "text",
            "replaces": "api-name",
            "isRequired": false,
            "defaultValue": "none",
            "description": "The Name of the API the function belongs to."
        },
        "api-namespace-const": {
            "type": "generated",
            "generator": "constant",
            "parameters": {
                "value": "com.onicloud.api"
            },
            "replaces": "api-namespace"
        },
        "hasApiName": {
            "type": "computed",
            "datatype": "bool",
            "value": "(api != \"none\")"
        },
        "hasSecrets": {
            "type": "computed",
            "datatype": "bool",
            "value": "(hasSignature || func-auth == 'jwt')"
        },
        "hasAnnotations": {
            "type": "computed",
            "datatype": "bool",
            "value": "(hasApiName)"
        },
        "includeJwt": {
            "type": "computed",
            "datatype": "bool",
            "value": "(func-auth == 'jwt')"
        },
        "jwtAutoritryServer": {
            "type": "generated",
            "generator": "constant",
            "replaces": "autority-server-secret",
            "parameters": {
                "value": "autority-server"
            }
        }
    }
}
